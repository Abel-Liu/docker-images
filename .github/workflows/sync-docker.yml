name: sync-docker

on:
  workflow_dispatch:
    inputs:
      registry:
        required: true
        type: choice
        options:
          - ygbj
          - ghcr
          - ali
      docker_images:
        description: "docker镜像 英文逗号分开"
        required: true

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

run-name: To [${{ inputs.registry }}] ${{ inputs.docker_images }}

jobs:
  sync:
    name: pull and push
    runs-on: ubuntu-latest

    steps:
      # - name: Clean up Docker to free space
      #   run: |
      #     docker system prune -a -f
      #     docker volume prune -f

      - name: Get env
        if: inputs.registry == 'ghcr'
        run: |
          echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
          owner=`echo "${{ github.repository_owner }}/" | tr '[:upper:]' '[:lower:]'`
          echo "OWNER=$owner" >> $GITHUB_ENV

      - name: Get env2
        if: inputs.registry == 'ali'
        run: |
          echo "REGISTRY=registry.cn-beijing.aliyuncs.com" >> $GITHUB_ENV
          echo "OWNER=abelrepo/" >> $GITHUB_ENV

      - name: Get env3
        if: inputs.registry == 'ygbj'
        run: |
          echo "REGISTRY=ygbjregistry.azurecr.cn" >> $GITHUB_ENV

      - name: Log in to ghcr
        if: inputs.registry == 'ghcr'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to ali
        if: inputs.registry == 'ali'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALI_DOCKER_USER }}
          password: ${{ secrets.ALI_DOCKER_PWD }}

      - name: Login to ygbj
        if: inputs.registry == 'ygbj'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.YGBJ_DOCKER_USER }}
          password: ${{ secrets.YGBJ_DOCKER_PWD }}

      - name: push
        run: |
          images="${{ github.event.inputs.docker_images }}"
          IFS=',' read -r -a image_array <<< "$images"

          for image in "${image_array[@]}"; do
            echo "image: $image"
            repo=$(echo $image)        #去除空格
            if [[ $repo =~ ":" ]]; then
              tag=${repo##*:}         #如果包含:，截取冒号后边
            else
              tag=latest              #不包含冒号，即没有写tag
            fi

            repo=${repo%:*}           #去除:后边的
            if [[ $REGISTRY =~ "ali" ]]; then
              repo="${repo//\//-}"    #替换/
            fi

            echo "Syncing repo: $repo, tag: $tag"

            docker pull $image
            docker tag $image ${{ env.REGISTRY }}/${{ env.OWNER }}$repo:$tag
            docker push ${{ env.REGISTRY }}/${{ env.OWNER }}$repo:$tag
          done
